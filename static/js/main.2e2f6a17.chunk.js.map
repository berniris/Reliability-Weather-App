{"version":3,"sources":["components/Header.jsx","components/cities/City.jsx","components/cities/Cities.jsx","components/Home.js","components/cities/CityView.jsx","components/Error.jsx","components/cities/View.jsx","App.js","registerServiceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","City","cityName","name","toLowerCase","replace","Link","to","concat","Cities","cities","map","city","cities_City","key","id","Home","components_Header","cities_Cities","CityView","cityImg","Math","ceil","main","temp","weather","Date","toDateString","src","icon","alt","description","floor","temp_min","temp_max","Error","View","cityWasClicked","console","log","cities_CityView","components_Error","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","getClickedCity","bind","assertThisInitialized","_this2","fetch","then","resp","json","data","setState","list","catch","err","index","findIndex","fetchWeatherData","document","title","_this3","Route","exact","path","render","components_Home","cities_View","match","params","Component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","BrowserRouter","component","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2e2f6a17.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Header (props) {\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t<h1 className=\"title\"><span className=\"reliability\">Reliability</span> Weather App</h1>\r\n\t\t<h1 className=\"about\">Click on a city's icon to get a detailed current weather forecast.</h1>\r\n\r\n\t\t</div>\r\n\t\t)\r\n} \r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction City(props) {\r\n  // replace spaces in the city name with a - to match css class name \r\n  const cityName = props.name.toLowerCase().replace(' ', '-');\r\n\r\n  return (\r\n    <Link to={`/${cityName}`}>\r\n    <div className={`${cityName}`}></div>\r\n    </Link>\r\n    )\r\n}\r\n\r\nexport default City;","import React from 'react';\r\nimport City from './City'\r\n\r\n\r\nfunction Cities(props) {\r\n  const cities = props.cities.map(city => {\r\n    return (\r\n      <City\r\n        key={city.id}\r\n        name={city.name}\r\n      />\r\n    )\r\n  })\r\n  \r\n  return (\r\n    <div className=\"city-container\">\r\n      {cities}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Cities;","import React from 'react';\r\nimport Header from './Header'\r\nimport Cities from './cities/Cities';\r\n\r\n\r\nfunction Home(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t<Header/>\r\n\t\t<Cities cities={props.cities}/>\r\n\t\t</div>\r\n\t\t)\r\n} \r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction CityView(props) {\r\n\tconst cityImg = props.city.name.toLowerCase().replace(' ', '-') + `-` + `img`;\r\n\treturn (\r\n\t<div className=\"view-container\">\r\n\t\t<div className=\"view-header\"><h1>{`${props.city.name}`}</h1>\r\n\t\t</div>\r\n\t\t<div className=\"view-body\"> \r\n\t\t    <div className=\"view-body-top\">\r\n\t\t    <div>\r\n\t\t\t<h1 className=\"temperature\">{Math.ceil(props.city.main.temp)}&deg;F</h1>\r\n\t\t\t<h1>{props.city.weather[0].main}</h1>\r\n\t\t\t</div>\r\n\t\t\t<h1>{new Date().toDateString()}</h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"description\">\r\n                <img src={`http://openweathermap.org/img/w/${props.city.weather[0].icon}.png`} alt=\"weather-icon\" />\r\n                <p><span className=\"detail\">Current weather in {props.city.name}:</span> {props.city.weather[0].description}</p>\r\n            </div>\r\n            <div className=\"weather-details\">\r\n            <p><span className=\"detail\">Low:</span> <span>{Math.floor(props.city.main.temp_min)}&deg;F</span></p>\r\n            <p><span className=\"detail\">High:</span> <span>{Math.floor(props.city.main.temp_max)}&deg;F</span></p>\r\n        </div>\r\n        </div>\r\n        <div className={`${cityImg} city-img`} alt=\"city-icon\" />\r\n        <div className=\"skinny-rect-shape\"></div>\r\n        <div className=\"circle-shape\"></div>\r\n        <div className=\"view-background\"></div>\r\n        <Link to=\"/\"><div className=\"close\"></div></Link>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default CityView;","import React from 'react';\r\nimport Cities from './cities/Cities';\r\n\r\nfunction Error (props) {\r\n\r\n\treturn (\r\n\t\t<div className=\"error\">\r\n\t\t<h1>404 Page Not Found</h1>\r\n\t\t<p>Try one of these links:</p>\r\n\t\t<Cities cities={props.cities}/>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Error; ","import React from 'react';\r\nimport CityView from './CityView';\r\nimport ErrorView from '../Error';\r\n\r\nfunction View (props) {\r\n\tconsole.log(props.city.city)\r\n\tlet cityWasClicked;\r\n\r\n\tif(props.city.city) {\r\n\t\tcityWasClicked = <CityView city={props.city.city}/>;\r\n\t} else {\r\n\t\tcityWasClicked = <ErrorView cities={props.cities}/>\r\n\t}\r\n\treturn (\r\n\t<div>\r\n\t{cityWasClicked}\r\n\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default View;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './components/Home';\nimport View from './components/cities/View'\n\nclass App extends Component {\n  constructor(props) {\n  super(props);\n  this.state={\n    cities: [],\n    error: false\n  }\nthis.getClickedCity = this.getClickedCity.bind(this);\n}\n\n  fetchWeatherData() {\n    //generate new api code and load in .env file before pushing to heroku \n    fetch(`https://api.openweathermap.org/data/2.5/group?id=3170647,2759794,6455259,3128760,5128638&units=imperial&appid=7b6e08c93ea26e6904940a301201292a`)\n    .then(resp => resp.json())\n    .then(data => this.setState({\n      cities: data.list\n    }))\n    .catch(err => this.setState({\n      error: true\n    }))\n  }\n\n  getClickedCity(name) {\n    const index = this.state.cities.findIndex(city => city.name.toLowerCase().replace(' ', '-') === name);\n    return {\n      city: this.state.cities[index]\n    }\n  }\n\n  componentDidMount() {\n    this.fetchWeatherData();\n    document.title = 'Reliability Weather'\n  }\n\n  render() {\n    return (\n  <div className=\"App\">\n  <Route\n  exact path=\"/\"\n  render={() => (<Home cities={this.state.cities}/>)}\n  />\n  <Route \n  path=\"/:id\"\n  render={(props) => (\n    <View\n      city={this.getClickedCity(props.match.params.id)}\n      cities={this.state.cities}\n      />\n      )}\n  />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render((\n  <Router>\n    <Route\n      path=\"/\"\n      component={App}\n    />\n  </Router>), \n  document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}